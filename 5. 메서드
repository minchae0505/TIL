## 메서드란?

객체의 행동을 정의하는 함수, 객체의 기능, ‘특정 작업을 수행하는 일련의 명령문들의 집합’

## 메서드와 함수의 차이

가끔 가다가 메서드와 함수가 같은 의미인데 언어에 따라 메서드 또는 함수란 단어를 사용하는 건가? 하는 생각이 들기도 했다면(내 얘기 아님) 꼭 끝까지 읽으시길…

"메서드(method)"와 "함수(function)" 용어는 종종 혼용되지만, 분명히 다른 점이 있으니 알아보자!

## 함수

<aside>
💡

- 함수는 프로그래밍의 기본적인 구성 요소로, 입력(인자, 매개변수)을 받아서 작업을 수행하고, 결과를 출력(반환값)으로 내보내는 독립적인 코드 블록이다.
- 함수는 **절차적 프로그래밍 언어**에서 자주 사용된다. 예를 들어, C 언어는 함수를 사용하여 프로그램을 구성한다.
+ 우리가 C언어에서 자주 쓰는 printf, scanf도 함수이다. (내장 함수)
- **함수는 보통 어떤 클래스에 속하지 않고, 전역적으로 정의되거나 다른 함수 내부에서 정의될 수 있다.**
</aside>

## 메서드

<aside>
💡

- 메서드는 **객체 지향 프로그래밍에서 사용되는 개념으로, 클래스에 속한 함수**를 의미
- 꿀팁
    
    <aside>
    💡
    
    → 클래스 내에 있는 함수를 메서드라고 부른다고 이해하면 쉽다.
    →그래서 주로 객체지향 프로그래밍에서 함수보다는 메서드를, 절차적 프로그래밍에선 함수라는 표현을 더 많이 들어봤던 것이다.
    
    </aside>
    
- 메서드는 클래스의 일부로 정의되며, 해당 클래스의 객체(인스턴스)를 통해서만 호출될 수 있다. 이는 메서드가 해당 객체의 상태(속성)에 접근하고, 객체의 행동을 정의한다는 의미이다.
- 메서드는 호출되는 객체에 따라 동작이 달라질 수 있으며, 객체의 상태를 변경하거나 객체로부터 정보를 가져올 수 있다.
</aside>

### **결론**

- 보통 “메서드는 함수이다.” 라고 하면 맞는 말이지만 “함수는 메서드이다.” 라고 하면 틀린 말이다.
함수는 독립적인 기능을 수행하는 코드 블록이고, 
메서드는 클래스 안에 있는 함수라는 걸 잊지말자!
- 함수는 절차적 프로그래밍에서의 구성 요소이며, 메서드는 객체 지향 프로그래밍에서 클래스와 객체의 행동을 정의한다
  
