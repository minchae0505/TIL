⭐`프래그먼트`는 하나의 UI 내에서 독립적으로 동작하는 화면 부분을 만들고 싶을 때 사용

## **특징**

- Activity의 일부이고,  독립적으로 동작할 수 있는 공간
- MainActivity 뿐만 아니라 다른 Activity에도 사용 가능하여 재사용성이 높음
- 태블릿과 폰 간의 차이를 다룰 수 있음
- 레이아웃, 동작 처리,수명 주기(Life Cycle)의 독립적인 관리에 용이

## 등장 배경

- Fragment는 Activity 가 가지고 있는 문제를 해결하기 위해 두둥 등장!!
- Activity가 가지고 있는 문제 2가지
    
    1) Activity 안에 코드가 길어지게 되면 코드가 길어지니까 유지 보수할 때 관리가 어려워짐
    
    2) 안드로이드 디바이스는 휴대폰,태블릿 등 다양하기 때문에 태블릿UI를 고려할 때 단순 Activity로 화면을 그리기에 한계가 있음
    

!https://velog.velcdn.com/images/dabin/post/7a86ffbc-138d-4584-982c-c60c8ab2e329/image.png

- 2번 문제를 그림으로 더 자세히 보자.  프래그먼트가 정의한 두 가지 UI 모듈이 태블릿 디자인에서는 하나의 액티비티로 조합될 수 있는 반면, 핸드셋 디자인에서는 분리될 수 있다는 것을 보여줌.
    - 그림을 예로 들어 뉴스 어플리케이션이 있다고 해봅시다! 이 애플리케이션을 태블릿 크기의 기기에서 실행하는 경우, 애플리케이션 내의 액티비티 A 안에 두 개의 프래그먼트를 포함할 수 있다. 그러나 휴대폰 크기의 화면은 두 프래그먼트를 모두 쓸 만큼 공간이 충분하지 않음
    - 따라서 액티비티 A에는 기사 목록에 해당되는 프래그먼트만 포함되고, 사용자가 기사를 하나 선택하면 액티비티 B가 시작됨. 여기에 기사를 읽을 두 번째 프래그먼트가 포함되어 있다. 따라서 **이 애플리케이션은 서로 다른 조합으로 프래그먼트를 재사용 함으로써 태블릿과 휴대폰 화면 모두 지원**

## ✅**Activity와 프래그먼트의 서로 다른 목적성**

- Activity : 앱 전체적인 사용자 인터페이스(UI)에 포함될 요소들을 배치하는 곳
- Fragment : 단일 화면이나 화면 일부에 관한 사용자 인터페이스(UI)를 정의하는데 적합
- 
    
    !https://user-images.githubusercontent.com/31889335/106560262-1947b280-656a-11eb-8c72-38207d027062.png
    
- (위 그림 참고) 하늘색 박스 부분은 Activity에 배치된 NavigationView 이고, 연두색 박스 부분은 프래그먼트 자체 UI입니다. Activity는 연두색 프래그먼트를 호스팅하고 있다

# ❌잘못 이해하고 있었던 부분

- 자주 사용되는 UI가 만들어지고 이 UI를 Activity를 관리하는 XML에 Fragment 코드 하나만 써주면 내가 fragment로 선언한 UI의 크기(너비, 높이), 색깔, 위치가 그대로 나타나는 줄 알았다. (그래서 재사용이 가능하다는 건 줄 알았음)

```xml
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"

	<Fragment>

    <TextView
        android:id="@+id/header_title"
        android:layout_width="match_parent"
        android:layout_height="50dp"
        android:text="배고프당🍞🥖"/>
        
    <Fragment/>

</LinearLayout>
```

내가 생각했던 Fragment 사용 방식

→ 대충 Fragment라는 XML파일을 하나 만들어주고 그 XML파일 이름을 내가 사용하고 싶은 부분에 써 주면 그 위치에 “뿅”하고 나타나는 줄…알았지만 전혀 그런 게 아니었죠(⇒ 공부의 중요성: 정확하고 확실하게 공부합시다…)

- Fragment를 사용하면 재사용 가능한 UI가 하나 만들어지는 줄 알았다.(→ 애초에 기존에 만든 UI코드 하나 복붙하면 됌…)
    - UI가 만들어지는 것이 아니라 Activity 내에
        
        UI를 정의 할 수 있는 범위를 독립적으로 선언하는 것
        

# ⭕헷갈리지 맙시다!!

- Fragment를 선언하는 것

→ Activity에 따라 단일 화면, 일부 화면 공간 그 자체를 만드는 것

- Fragment에 UI를 선언하는 것

→‘Fragment’라는 독립된 작은 공간에 UI를 배치하는 것

## ✅ **프래그먼트 사용 시 주의점**

- 프래그먼트는 재사용 가능한 자체 UI를 가지기 때문에 어느 Activity에나 호스팅 될 수 있고 어느 프래그먼트에나 호스팅 될 수 있다.( 호스팅: 앱의 UI 또는 기능 구성 요소가 다른 컴포넌트에 의해 관리되는 개념)
- 따라서 프래그먼트 클래스에는 자체 UI를 관리하는 로직만 구현해야 하고 다른 Activity나 다른 프래그먼트를 직접 조작하는 로직을 포함하면 안된다.
    
    (**모듈성, 재사용성을 해치게 됨**)
