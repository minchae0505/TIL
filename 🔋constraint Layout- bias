
textView를 가운데 정렬 하려고 gravity:center를 했는데 안 먹히는 것임

그래서 찾아보니 뷰를 정 가운데 두고 싶으면 

```xml
        app:layout_constraintLeft_toLeftOf="parent"
        app:layout_constraintRight_toRightOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintBottom_toBottomOf="parent"
```

위 코드를 추가해주면 된다는 것임. 근데 나는 정중앙에서 약간 위쪽에 뷰를 위치하게 하고 싶었음. 그래서 다시 구글링을 시작함

다른 블로거는 constraint layout에는 “center”가 들어간 이름의 속성이 없다는 것임. 즉 내가 gravity를 적용했을 때 먹히지 않았던 이유가 이것임. 

그러면서 전 블로거와 같은 방법을 제시함.

### 뷰 가운데 배치

뷰 위젯의 왼쪽 사이드를 부모 레이아웃의 왼쪽 사이드에 맞춘 다음, 뷰 위젯의 오른쪽 사이드를 부모 레이아웃의 오른쪽 사이드에 맞춘다. 단, 뷰 위젯의 너비(layout_width)는 "wrap_content"로 유지시킨 상태여야 하고 뷰 위젯의 위/아래 쪽 사이드도 동일하게 부모 레이아웃의 위,아래 사이드에 맞춘다.

![img1.daumcdn.png](attachment:086b63ce-f664-4641-8e4b-04b664e897dc:img1.daumcdn.png)

근데 다 따라하고 나니 갑자기 이건 사실 불가능한 제약이라네?? 뷰 위젯의 크기가 정확히 부모 레이아웃과 일치하지 않는다면(또는 뷰 위젯의 크기를 MATCH_CONSTRAINT(0dp)로 지정하지 않는다면), 왼쪽 사이드에 대한 제약과 오른쪽 사이드에 대한 제약 두 가지 모두 만족할 수 없는 상태인 것이란다.

이런 경우, 컨스트레인트레이아웃은 만족시킬 수 없는 이 두 가지 제약이 뷰 위젯에 동일한 조건으로 양 사이드를 잡아당기는 것처럼 작용하게 되며, 이로 인해 뷰 위젯이 부모 레이아웃의 가운데 위치하게 되는 것 이라고 함. (이러한 힘의 작용은, 자식(Children) 뷰 위젯 간에도 동일하게 적용)

### 2. 가운데 위치한 뷰 위젯을 내 마음대로 배치하기

뷰 위젯을 무조건 한 가운데 위치시키는 것이 아니라, 중앙에서 옆(또는 위아래)으로 조금 이동시키고 싶은 경우도 있을 것입니다. 즉, 뷰 위젯을 가운데 위치에서 다른 방향으로 조금 치우치게 만드는 것이죠. 이런 경우, 뷰 위젯을 주어진 비율만큼 한 방향으로 치우치게 만드는 속성을 사용할 수 있는데, 바로 **Bias**(바이어스) 관련 속성입니다. Bias는 "치우침", "편중"이라는 뜻을 가진 단어죠.

Bias와 관련된 제약은 크게 두 개입니다. 수평(Horizontal) 방향에 대한 Bias와 수직(Vertical) 방향에 대한 Bias.

<aside>
💡

- layout_constraintHorizontal_bias- 수평 방향(Left/Right 또는 Start/End) 사이드 제약 시, 양 사이드 간 위치 비율.
> 0 이상의 소수점 값 사용 가능. (예. 0.1, 0.65, 0.821)
> 뷰의 왼쪽(또는 시작) 사이드 제약 위치가 0의 기준.
> 뷰의 오른쪽(또는 끝) 사이드 제약 위치가 1의 기준.
> 기본 값은 0.5(수평 방향 가운데 위치).
- layout_constraintVertical_bias- 수직 방향(Top/Bottom) 사이드 제약 시, 양 사이드 간 위치 비율.
> 0 이상의 소수점 값 사용 가능. (예. 0.1, 0.65, 0.821)
> 뷰의 위 사이드 제약 위치가 0의 기준.
> 뷰의 아래 사이드 제약 위치가 1의 기준.
> 기본 값은 0.5(수직 방향 가운데 위치).
</aside>
