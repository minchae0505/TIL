## ❓여기서 생기는 의문!

그래서 인스턴스가 뭐임?

- 생성자를 만들어서 메모리에 올라가서(할당되어) 존재하는 상태가 되면 그게 인스턴스

### 그러면 생성자는 또 뭔데?

- 생성자도 메서드래 와웅
- 뒤에서 더 자세히 알아보자

### 인스턴스 변수의 초기화

클래스를 가지고 객체를 생성하면, 해당 객체는 메모리에 즉시 생성된다.

하지만 이렇게 생성된 객체는 모든 인스턴스 변수가 아직 초기화되지 않은 상태

자바에서 클래스 변수와 인스턴스 변수는 별도로 초기화하지 않으면, 다음 값으로 자동 초기화 된다.

| **변수의 타입** | **초깃값** |
| --- | --- |
| char | '\u0000' |
| byte, short, int | 0 |
| long | 0L |
| float | 0.0F |
| double | 0.0 또는 0.0D |
| boolean | false |
| 배열, 인스턴스 등 | null |

하지만 사용자가 원하는 값으로 인스턴스 변수를 초기화하려면, 일반적인 초기화 방식으로는 초기화할 수 없다.

인스턴스 변수 중에는 private 변수도 있으며, 이러한 private 변수에는 사용자나 프로그램이 직접 접근할 수 없기 때문입니다.

따라서 private 인스턴스 변수에도 접근할 수 있는 초기화만을 위한 public 메소드가 필요해집니다.

이러한 초기화만을 위한 메소드는 객체가 생성된 후부터 사용되기 전까지 반드시 인스턴스 변수의 초기화를 위해 호출되어야 합니다.

---

### 생성자(constructor)

객체의 생성과 동시에 인스턴스 변수를 원하는 값으로 초기화할 수 있는 메소드

- 자바에서 생성자(constructor)의 이름은 해당 클래스의 이름과 같아야 한다.

즉, Car 클래스의 생성자의 이름은 Car가 되는 것임.

생성자’s 특징

1. 생성자는 반환 값이 없지만, 반환 타입을 void형으로 선언하지 않는다.

2. 생성자는 초기화를 위한 데이터를 인수로 전달 받을 수 있다.

3. 객체를 초기화하는 방법이 여러 개 존재할 경우에는 하나의 클래스가 여러 개의 생성자를 가질 수 있습니다.

즉, 생성자도 하나의 메소드이므로, 메소드 오버로딩이 가능하다는 의미입니다.

1. 🌟생성자를 초기화하지 않을 경우 클래스 내에는 컴파일러가 자동적으로 default생성자(기본생성자)를 만든다.
